{"version":3,"sources":["square.js","board.js","game.js","index.js"],"names":["Square","props","className","onClick","value","PLAYERS","true","false","Board","state","squares","Array","fill","isXnext","winner","i","this","handleClick","updatedSquares","calculateWinner","setState","status","renderSquare","line","a","b","c","React","Component","Game","ReactDOM","render","document","getElementById"],"mappings":"wPAYeA,MARf,SAAgBC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,SCDPC,EAAU,CACdC,KAAM,IACNC,MAAO,KAsFMC,E,kDAnFb,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IACDQ,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,EACTC,OAAQ,MALO,E,gDAQnB,SAAaC,GAAI,IAAD,OACd,OACE,cAAC,EAAD,CACEX,MAAOY,KAAKP,MAAMC,QAAQK,GAC1BZ,QAAS,kBAAM,EAAKc,YAAYF,Q,yBAItC,SAAYA,GACV,IAAIC,KAAKP,MAAMK,SAAUE,KAAKP,MAAMC,QAAQK,GAA5C,CAIA,IAAIG,EAAc,YAAOF,KAAKP,MAAMC,SACpCQ,EAAeH,GAAKV,EAAQW,KAAKP,MAAMI,SACvC,IAAIC,EAASE,KAAKG,gBAAgBD,GAClCF,KAAKI,SAAS,CACZV,QAASQ,EACTL,SAAUG,KAAKP,MAAMI,QACrBC,OAAQA,O,oBAGZ,WACE,IAAIO,EAMJ,OAJEA,EADEL,KAAKP,MAAMK,OACP,oBAAgBE,KAAKP,MAAMK,QAE3B,uBAAmBT,EAAQW,KAAKP,MAAMI,UAG5C,gCACE,qBAAKX,UAAU,SAAf,SAAyBmB,IACzB,sBAAKnB,UAAU,YAAf,UACGc,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,MAErB,sBAAKpB,UAAU,YAAf,UACGc,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,MAErB,sBAAKpB,UAAU,YAAf,UACGc,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,W,6BAK3B,SAAgBZ,GAWd,IAVA,IAUA,MAVc,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,eAA0B,CAArB,IAAIa,EAAI,KACX,cAAgBA,EAAhB,GAAKC,EAAL,KAAQC,EAAR,KAAWC,EAAX,KACA,GACEhB,EAAQc,IACRd,EAAQc,KAAOd,EAAQe,IACvBf,EAAQe,KAAOf,EAAQgB,GAEvB,OAAOhB,EAAQc,GAGnB,OAAO,S,GAhFSG,IAAMC,WCUXC,E,4JAdb,WACE,OACE,gCACE,8CACA,qBAAK3B,UAAU,OAAf,SACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,e,GAPOyB,IAAMC,WCGzBE,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.ddfddfd9.chunk.js","sourcesContent":["/** @format */\n\nimport React from \"react\";\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nexport default Square;\n","/** @format */\n\nimport React from \"react\";\n\nimport Square from \"./square\";\n\nconst PLAYERS = {\n  true: \"X\",\n  false: \"O\",\n};\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      isXnext: true,\n      winner: null,\n    };\n  }\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.state.squares[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n  handleClick(i) {\n    if (this.state.winner || this.state.squares[i]) {\n      // preventing overwriting\n      return;\n    }\n    let updatedSquares = [...this.state.squares];\n    updatedSquares[i] = PLAYERS[this.state.isXnext];\n    let winner = this.calculateWinner(updatedSquares);\n    this.setState({\n      squares: updatedSquares,\n      isXnext: !this.state.isXnext,\n      winner: winner,\n    });\n  }\n  render() {\n    let status;\n    if (this.state.winner) {\n      status = `Winner is ${this.state.winner}`;\n    } else {\n      status = `Next Player: ${PLAYERS[this.state.isXnext]}`;\n    }\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n  calculateWinner(squares) {\n    let results = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let line of results) {\n      let [a, b, c] = line;\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[b] === squares[c]\n      ) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n}\n\nexport default Board;\n","/** @format */\n\nimport React from \"react\";\nimport Board from \"./board\";\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1> Tic Tac Toe</h1>\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport Game from \"./game\";\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}